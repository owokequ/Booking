import tseslint from '@typescript-eslint/eslint-plugin';
import tsParser from '@typescript-eslint/parser';

export default [
  {
    files: ['**/*.ts'],
    languageOptions: {
      parser: tsParser,
      parserOptions: {
        project: ['./tsconfig.json'],
        sourceType: 'module',
      },
    },
    plugins: {
      '@typescript-eslint': tseslint,
    },
    rules: {
      // üí° –ú—è–≥—á–µ –æ—Ç–Ω–æ—Å–∏–º—Å—è –∫ "any" –∏ unsafe –æ–ø–µ—Ä–∞—Ü–∏—è–º
      '@typescript-eslint/no-explicit-any': 'off',
      '@typescript-eslint/no-unsafe-assignment': 'warn',
      '@typescript-eslint/no-unsafe-call': 'warn',
      '@typescript-eslint/no-unsafe-return': 'warn',
      '@typescript-eslint/no-unsafe-member-access': 'warn',

      // üß© –ü–æ–∑–≤–æ–ª—è–µ–º –Ω–µ await‚Äô–∏—Ç—å –ø—Ä–æ–º–∏—Å—ã –≤ bootstrap –∏ —Ç–µ—Å—Ç–∞—Ö
      '@typescript-eslint/no-floating-promises': ['warn', { ignoreVoid: true }],

      // üöÄ –ü—Ä–æ—á–∏–µ —É–ª—É—á—à–µ–Ω–∏—è
      '@typescript-eslint/explicit-module-boundary-types': 'off',
      'no-console': process.env.NODE_ENV === 'production' ? 'error' : 'off',
    },
  },
  {
    // ‚öôÔ∏è –û—Ç–¥–µ–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    files: ['**/*.spec.ts', '**/*.test.ts'],
    rules: {
      '@typescript-eslint/no-unsafe-assignment': 'off',
      '@typescript-eslint/no-unsafe-call': 'off',
      '@typescript-eslint/no-unsafe-return': 'off',
      '@typescript-eslint/no-unsafe-member-access': 'off',
      '@typescript-eslint/no-floating-promises': 'off',
    },
  },
];
